@model WebForms.ViewModels.TemplateEditViewModel

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let questionIndex = @Model.Questions.Count; 
    let selectedTags = @Html.Raw(Json.Serialize(Model.CurrentTags));
    const availableTags = @Html.Raw(Json.Serialize(Model.AvailableTags));
</script>
<script src ="~/js/edit-template.js"></script>
<script src ="~/js/create-edit-template.js"></script>

<h2>Template editing</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">

    <input type="hidden" asp-for="TemplateId" />

    <div class="form-group">
        <label for="Name">Name</label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <textarea asp-for="Description" class="form-control" rows="3" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TopicId">Select Topic</label>
        <select asp-for="TopicId" class="form-control">
            @foreach (var topic in Model.AvailableTopics)
            {
                <option value="@topic.Id" selected="@(topic.Id == Model.TopicId ? "selected" : null)">@topic.Name</option>
            }
        </select>
        <span asp-validation-for="TopicId" class="text-danger"></span>
    </div>

    <input type="hidden" name="RemoveImage" id="remove-image-hidden" value="false" />
    
    <label>Image</label>
    <div class="form-group">
        <div class="position-relative d-inline-block">
            <img asp-for="ImageUrl" id="current-image" src="@Model.ImageUrl" class="img-thumbnail mb-2" alt="No image" style="max-width: 200px;" />
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <button type="button" class="btn btn-danger btn-sm position-absolute" id="remove-image-btn" style="top: 5px; right: 5px;" onclick="removeImage()">×</button>
            }
        </div>
        <input type="file" asp-for="NewImageFile" class="form-control" accept="image/*" onchange="previewImage(this)" />
        <span asp-validation-for="NewImageFile" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Tags">Tags</label>
        <input type="text" class="form-control" id="Tags" name="Tags" autocomplete="off" placeholder="Enter tag..." oninput="showAutocomplete(this.value)" />
        <div id="autocomplete-list" class="autocomplete-items"></div>
    </div>

    <div id="selected-tags" class="mt-2"></div>

    <div id="questions-container" class="mb-4" ondrop="drop(event)" ondragover="allowDrop(event)">
        <h4>Questions</h4>
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <div class="question-item border rounded p-3 mb-3" draggable="true" ondragstart="drag(event)" id="question-@i">
                <h5>Question @(i + 1)</h5>
                <div class="form-group mt-2">
                    <input type="text" name="Questions[@i].Text" value="@Model.Questions[i].Text" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="questions[@i].Type">Type</label>
                    <select name="questions[@i].Type" class="form-control">
                        <option value="SingleLine" selected="@(Model.Questions[i].Type == "SingleLine" ? "selected" : null)" )>Single-line answer</option>
                        <option value="MultipleLine" selected="@(Model.Questions[i].Type == "MultipleLine" ? "selected" : null)" )>Text answer</option>
                        <option value="Integer" selected="@(Model.Questions[i].Type == "Integer" ? "selected" : null)" )>Integer-value answer</option>
                        <option value="Checkbox" selected="@(Model.Questions[i].Type == "Checkbox" ? "selected" : null)" )>Checkbox answer</option>
                    </select>
                </div>
                <div class="form-group form-check">
                    @if (Model.Questions[i].IsVisible)
                    {
                        <input type="checkbox" class="form-check-input" name="Questions[@i].IsVisible" id="Questions[@i].IsVisible" value="true" checked />
                    }
                    else
                    {
                        <input type="checkbox" class="form-check-input" name="Questions[@i].IsVisible" id="Questions[@i].IsVisible" value="true" />
                    }
                    <label class="form-check-label" for="Questions[@i].IsVisible">Show in the form</label>
                </div>

                <button type="button" class="btn btn-danger mt-2" onclick="removeQuestion(@i)">Delete</button>
            </div>
        }
    </div>

    <button type="button" class="btn btn-secondary" onclick="addQuestion()">Add question</button>
    <button type="submit" class="btn btn-success">Save</button>
</form>